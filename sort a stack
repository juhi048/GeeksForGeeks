void insertSorted(stack<int> &s,int target){
    if(s.empty()){
        s.push(target);
        return;
    }
    if(target>=s.top()){
        s.push(target);
        return ;
    }
    int temp=s.top();
    s.pop();
    insertSorted(s,target);
    s.push(temp);
}

void SortedStack :: sort()
{
   //Your code here
   if(s.empty()){
       return;
   }
   int target = s.top();
   s.pop();
   sort();
   insertSorted(s,target);
   
}
